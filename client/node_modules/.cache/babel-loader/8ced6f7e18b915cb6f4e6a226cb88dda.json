{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["c:\\current projects\\javascript\\udemy-react\\bel-clothing\\src\\redux\\shop\\shop.sagas.js"],"names":["takeEvery","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEAF,EAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAG,IAAAA,QAAQ,CAACC,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACD,GAHD,EAGGI,KAHH,CAGSC,KAAK,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAH1B;AAKD;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMnB,SAAS,CACbC,eAAe,CAACmB,uBADH,EAEblB,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\n\r\n\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('I am fired');\r\n\r\n  const collectionRef = firestore.collection('collections');\r\n\r\n  collectionRef.get().then(snapshot => {\r\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\r\n    dispatch(fetchCollectionsSuccess(collectionsMap));\r\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}