{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDmpLDd7SFXOoY_epXLJjfmcpm1kxW4NMY\",\n  authDomain: \"bel-clothing-db.firebaseapp.com\",\n  databaseURL: \"https://bel-clothing-db.firebaseio.com\",\n  projectId: \"bel-clothing-db\",\n  storageBucket: \"\",\n  messagingSenderId: \"77499776256\",\n  appId: \"1:77499776256:web:056c2774e9061f554a47e5\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; // take the link into the databse\n\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get(); // check if the user exists in our database\n  // if(!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n  //   // if not exists, we should store the user into DB\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createdAt,\n  //       ...additionalData\n  //     })\n  //   } catch (error) {\n  //     console.log('error creating user:', error.message)\n  //   }\n  // }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["c:\\current projects\\javascript\\udemy-react\\bel-clothing\\src\\firebase\\firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,iCAFC;AAGbC,EAAAA,WAAW,EAAE,wCAHA;AAIbC,EAAAA,SAAS,EAAE,iBAJE;AAKbC,EAAAA,aAAa,EAAE,EALF;AAMbC,EAAAA,iBAAiB,EAAE,aANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe,OAD4D,CAG3E;;AACA,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CAN2E,CAQ3E;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOL,OAAP;AACD,CA3BM;AA6BPZ,QAAQ,CAACkB,aAAT,CAAuBjB,MAAvB;AAEA,OAAO,MAAMkB,IAAI,GAAGnB,QAAQ,CAACmB,IAAT,EAAb;AACP,OAAO,MAAMN,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMO,QAAQ,GAAG,IAAIpB,QAAQ,CAACmB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAGP,eAAepB,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDmpLDd7SFXOoY_epXLJjfmcpm1kxW4NMY\",\r\n  authDomain: \"bel-clothing-db.firebaseapp.com\",\r\n  databaseURL: \"https://bel-clothing-db.firebaseio.com\",\r\n  projectId: \"bel-clothing-db\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"77499776256\",\r\n  appId: \"1:77499776256:web:056c2774e9061f554a47e5\"\r\n}\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  // take the link into the databse\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  // check if the user exists in our database\r\n  // if(!snapShot.exists) {\r\n  //   const { displayName, email } = userAuth;\r\n  //   const createdAt = new Date();\r\n\r\n  //   // if not exists, we should store the user into DB\r\n  //   try {\r\n  //     await userRef.set({\r\n  //       displayName,\r\n  //       email,\r\n  //       createdAt,\r\n  //       ...additionalData\r\n  //     })\r\n  //   } catch (error) {\r\n  //     console.log('error creating user:', error.message)\r\n  //   }\r\n  // }\r\n\r\n  return userRef;\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n\r\nexport default firebase;\r\n\r\n"]},"metadata":{},"sourceType":"module"}