{"ast":null,"code":"import _defineProperty from \"c:\\\\current projects\\\\javascript\\\\udemy-react\\\\bel-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"c:\\\\current projects\\\\javascript\\\\udemy-react\\\\bel-clothing\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Homepage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  } // when the user log-in we want to get user information from firebase, and we store it into the state\n  // but we should remove this info from the state when the components are Unmount\n\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); // with onSnaphot we can see the actual data in our DB document\n        // snaphot itself contains the ID of the user. Data() all other info we stored\n\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: _objectSpread({\n              id: snapShot.id\n            }, snapShot.data())\n          });\n          console.log(this.state);\n        });\n      } else {\n        // but if the user Logged out we should setState to 'userAuth => null' after logging out \n        this.setState({\n          currentUser: userAuth\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth = null;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUpPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["c:\\current projects\\javascript\\udemy-react\\bel-clothing\\src\\App.js"],"names":["React","Switch","Route","Homepage","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","App","Component","constructor","props","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","id","data","console","log","componentWillUnmount","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;;AAEA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAUnBC,mBAVmB,GAUG,IAVH;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD,GAP+B,CAShC;AACA;;;AAGAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,mBAAL,GAA2BN,IAAI,CAACU,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACpE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMX,yBAAyB,CAACU,QAAD,CAA/C,CADY,CAEb;AACA;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC5B,eAAKC,QAAL,CAAc;AACZP,YAAAA,WAAW;AACTQ,cAAAA,EAAE,EAAEF,QAAQ,CAACE;AADJ,eAENF,QAAQ,CAACG,IAAT,EAFM;AADC,WAAd;AAMAC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACD,SARF;AASA,OAbD,MAaO;AAAE;AACR,aAAKQ,QAAL,CAAc;AAACP,UAAAA,WAAW,EAAEG;AAAd,SAAd;AAED;AACA,KAlB0B,CAA3B;AAmBD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrB,SAAKd,mBAAL,GAA2B,IAA3B;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEZ,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEE,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AAlD+B;;AAqDlC,eAAeG,GAAf","sourcesContent":["import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport Homepage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  // when the user log-in we want to get user information from firebase, and we store it into the state\n  // but we should remove this info from the state when the components are Unmount\n  unsubscribeFromAuth = null\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n     if (userAuth) {\n       const userRef = await createUserProfileDocument(userAuth);\n      // with onSnaphot we can see the actual data in our DB document\n      // snaphot itself contains the ID of the user. Data() all other info we stored\n      userRef.onSnapshot(snapShot => {\n         this.setState({\n           currentUser: {\n             id: snapShot.id,\n             ...snapShot.data()\n           }\n         });\n         console.log(this.state)\n       })\n     } else { // but if the user Logged out we should setState to 'userAuth => null' after logging out \n      this.setState({currentUser: userAuth })\n\n    }\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth = null;\n  }\n\n  render() {\n    return (\n      <div>\n        <Header currentUser={this.state.currentUser}/>\n        <Switch>\n          <Route exact path='/' component={Homepage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route path='/signin' component={SignInAndSignUpPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}